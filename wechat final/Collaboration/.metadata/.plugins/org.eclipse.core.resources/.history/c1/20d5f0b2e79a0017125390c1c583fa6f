package com.niit.controller;

import java.util.ArrayList;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.messaging.handler.annotation.DestinationVariable;
import org.springframework.messaging.handler.annotation.MessageMapping;
import org.springframework.messaging.simp.SimpMessagingTemplate;
import org.springframework.messaging.simp.annotation.SubscribeMapping;
import org.springframework.stereotype.Controller;

import com.niit.model.Chat;

@Controller
public class SockController
{
private SimpMessagingTemplate messagingTemplate;
private List<String> users=new ArrayList<String>();
@Autowired
public SockController(SimpMessagingTemplate messagingTemplate){
	super();
	this.messagingTemplate=messagingTemplate;
	
}



@SubscribeMapping("/join/{username}")
public List<String> join(@DestinationVariable("username") String username){
	if(!users.contains(username))
		users.add(username);
	messagingTemplate.convertAndSend("topicjoin",username);
	return users;
}

@MessageMapping(value="/chat")
public void chatReceived(Chat chat){
	if("all".equals(chat.getTo())){
		messagingTemplate.convertAndSend("queuechats",chat);
		
	}
	else
	{
		messagingTemplate.convertAndSend("queuechats"+chat.getTo(),chat);
		messagingTemplate.convertAndSend("queuechats"+chat.getFrom(),chat);
		
	}
}
}
